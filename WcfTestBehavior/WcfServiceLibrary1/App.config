<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  
  <system.web>
    <compilation debug="true" />
  </system.web>
  
  <!--https://msdn.microsoft.com/pl-PL/library/ms731354(v=vs.110).aspx-->
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <!--!! Określa sposób zachowania się service-->
        <!--https://msdn.microsoft.com/pl-pl/library/aa967282(v=vs.110).aspx-->
        <behavior>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <!--! Określa sposób zachowania się endpointu-->
        <!--W szczególności pozwala na ustawienie zachowania endpointDiscovery (w serwerze, np dodanie scope, czyli adresu pod którym client będzie szukał endpointDiscovery) -->
        <!--https://msdn.microsoft.com/pl-pl/library/ms731403(v=vs.110).aspx-->
        <behavior>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <!--! Opis różnych bindings https://msdn.microsoft.com/pl-PL/library/ms731399(v=vs.110).aspx-->
      <!--Różnice w typach bindings i wybór odpowiedniego: http://www.dotnettricks.com/learn/wcf/understanding-various-types-of-wcf-bindings-->
      <!--https://www.codeproject.com/Articles/764269/Default-Binding-and-Behavior-Configurations-Standa-->
      <!--użycie:
              <basicHttpBinding>
                <binding name="withMtom" messageEncoding="Mtom" />
              </basicHttpBinding>
          odwoła się do
              <service name="WelcomeService.Greeting">
                <endpoint ... bindingConfiguration="withMtom" ... />
              </service>
          użycie:
              <basicHttpBinding>
                <binding name="" messageEncoding="Mtom" />
              </basicHttpBinding>
          odwoła się do endpointów bez ustalonego atrybutu bindingConfiguration   
      -->
    </bindings>
    
    <client>
      <!--!! Specyfikacja endpointw client-->
      <!--https://msdn.microsoft.com/pl-pl/library/ms731762(v=vs.110).aspx-->
      <endpoint>
      </endpoint>
      <metadata>
        <!--https://msdn.microsoft.com/pl-pl/library/ms731754(v=vs.110).aspx-->
      </metadata>
    </client>
    
    <comContracts>
      <!--https://msdn.microsoft.com/pl-pl/library/ms731327(v=vs.110).aspx-->
    </comContracts>
    <!--Zawiera behaviors dodawane do każdego service i każdego client. Jeśli behavior o takim 
        samym name jest zdefiniowany w commonBehavior i behaviors, to behaviors ma piorytet-->
    <!--https://msdn.microsoft.com/pl-pl/library/aa734725(v=vs.110).aspx-->
    
    <!--
    <commonBehaviors>      
      <endpointBehaviors>
      </endpointBehaviors>      
      <serviceBehaviors>
      </serviceBehaviors>
    </commonBehaviors>
    -->
    
    <!--!! Definiowanie sposobu i zakresu logowania-->
    <!--https://msdn.microsoft.com/pl-PL/library/ms731297(v=vs.110).aspx-->
    
    <diagnostics>
      <endToEndTracing />
      <messageLogging>
      </messageLogging>
    </diagnostics>
    <!--! Rozszerzenia, czyli coś jak, grupy ustawień. Można ich potem użyć jak szablonów.
        Działa w połączeniu ze standardEndpoint - patrz przykład poniżej-->
    <!--https://msdn.microsoft.com/pl-PL/library/aa967281(v=vs.110).aspx-->
    <!--https://www.codeproject.com/articles/324011/creating-your-own-customized-standard-endpoints-in-->
    <extensions>
      <endpointExtensions>
        <!-- <services>
               <service name="TestWcfStandardEndpoints.Service1">
                <endpoint address="..." kind="mexEndpoint" />-->
        <add name="companyNameEndpoint" type="TestWcfStandardEndpoints.CompanyNameStandardEndpointCollectionElement, TestWcfStandardEndpoints" />
      </endpointExtensions>
      <bindingExtensions />
      <behaviorExtensions />
      <bindingElementExtensions />
    </extensions>
    <!--! Defaultowe ustawienia dla poszczególnych protokołów. Rozpoznawane po początku address w endPoint.
        Np 'address="http://localhost..."' oznacza, że pobierze dane z '<add scheme="http"'-->
    <!--https://msdn.microsoft.com/pl-pl/library/ee816881(v=vs.110).aspx-->
    <!--https://www.codeproject.com/Articles/758926/Default-endpoints-and-default-protocol-mapping-in-->
    <protocolMapping>
      <!--Standardem dla http jest użycie 'basicHttpBinding', ale poniższa linia zmieni to na 'wsHttpBinding'.
          To oznacza, że każdy nowy endpoint, dla którego nie przesłonimy tej watrości (czyli np tworzony w runtime), dostanie 'ws...'-->
      <add scheme="http" binding="wsHttpBinding" bindingConfiguration="" />
    </protocolMapping>
    <!--! Routing, tak jak router, przekazuje zapytania do odpowiednich service. W tym przypadku klient nie kontaktuje się z konkretnym
        (z wielu możliwych) endpoint service, ale zawsze z routerem-->
    <!--https://msdn.microsoft.com/pl-pl/library/ee816904(v=vs.110).aspx-->
    <!--https://www.codeproject.com/Articles/772854/WCF-Routing-Service-Part-I-Basic-Concept-Simple-Ro-->
    <routing>
    </routing>
    <!--Definiuje typ środowiska dla hostowania service. Zupełnie nie wiem co to jest-->
    <!--https://msdn.microsoft.com/pl-pl/library/ms731336(v=vs.110).aspx-->
    <!--! Najbardziej znany aspekt użycia to ustawienie aspNetCompatibilityEnabled z false (default) na true, co oznacz, że   
            zapytania będą obsługiwane przez pipeline ASP.NET HTTP o komunikacja przez protokoły inne niż HTTP jest zabroniona.-->
    <!--https://msdn.microsoft.com/pl-pl/library/aa702682(v=vs.110).aspx-->
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true">
    </serviceHostingEnvironment>
    <!--Definicje services-->
    <services>
      <!--!! Definicja pojedynczego service-->
      <!--https://msdn.microsoft.com/pl-pl/library/ms731303(v=vs.110).aspx-->
      <service name="WcfServiceLibrary1.Service1">
        <!--name jest obowiązkowy-->
        <!--Ustawia binding, contract, address etc poszczególnych endpointów-->
        <!--endpoint>
        </endpoint-->
        <!--Ustawienia dla hosta w zakresie tej usługi-->
        <host>
          <baseAddresses />
          <!--!! Określa limity czasu -->
          <!--https://social.msdn.microsoft.com/Forums/vstudio/en-US/84551e45-19a2-4d0d-bcc0-516a4041943d/explaination-of-different-timeout-types?forum=wcf-->
          <!--Info. To działa raczej dla czasu wykonywania requesta niż dla sprawdzania, czy serwer odpowiada, bo w  
              takim przypadku dostajemy EndpointNotFoundException, który oczywiście powinniśmy przechwycić w try/catch.-->
          <!--timeOuts /-->
        </host>
      </service>
    </services>
    <!--Defaultowe ustawienia dla nowego endpointa. Są one już skonfigurowane, ale można te ustawienia nadpisać-->
    <!--https://www.codeproject.com/Articles/764269/Default-Binding-and-Behavior-Configurations-Standa-->
    <!--http://developers.de/blogs/damir_dobric/archive/2010/02/22/standard-endpoints-and-mexbindings.aspx-->
    <standardEndpoints>
    </standardEndpoints>
  </system.serviceModel>
</configuration>